#!/bin/bash -eu

# Generate skeleton files for completion of specified command.

shopt -s extglob

if [[ $# -lt 1 ]]; then
    echo "Usage: $0 command [args...]" >&2
    exit 1
fi

cmd=$1
file=$1
arg=${2-}
marker=

if [[ $cmd == *.* ]]; then
    file=${cmd//./-}
    marker=$'\n'"@pytest.mark.bashcomp("$'\n'"    cmd=\"$cmd\","$'\n'")"
fi

name=$(python -c "import re,sys;print(re.sub('(^|[_-]+)(.)',lambda m:m.group(2).upper(),sys.argv[1]))" $file)

cat <<EOF >t/test_$file.py
import pytest

$marker
class Test$name(object):

    @pytest.mark.complete("$1 $arg")
    def test_1(self, completion):
        assert completion.list
EOF

tmpfile=$(mktemp)
trap "{ rm -f $tmpfile; }" EXIT
in_extra_dist=
added=
IFS=$'\n'
while read -r line; do
    if [[ $in_extra_dist ]]; then
        if [[ $line != $'\t'* ]]; then
            if [[ ! $added ]]; then
                echo -e "\ttest_$file.py \\"
                added=true
            fi
            in_extra_dist=
        elif [[ ! $added && $line > $'\t'test_$file.py ]]; then
            echo -e "\ttest_$file.py \\"
            added=true
        fi
        echo "$line"
    else
        if [[ $line == EXTRA_DIST\ * ]]; then
            in_extra_dist=true
        fi
        echo "$line"
    fi
done < t/Makefile.am > $tmpfile && mv -f $tmpfile t/Makefile.am
